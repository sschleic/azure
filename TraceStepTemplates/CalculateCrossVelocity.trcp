<?xml version="1.0" encoding="utf-8"?>
<TRACE-STEP-PROTOTYPE format-rev="1" uuid="c50487de329211e489680024e8a0e567" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="trcpEventPythonII">
	<DESCRIPTION xsi:type="string">Calculates the lateral velocity of the ego vehicle</DESCRIPTION>
	<SIGNALS xsi:type="trcpParameterDescriptionList">
		<PARAMETER uuid="e3d9e700329211e49bcc0024e8a0e567" xsi:type="signalDescription">
			<NAME xsi:type="string">VelocityAngle</NAME>
			<DESCRIPTION xsi:type="string">The signal for which the minimum and maximum will be calculated.</DESCRIPTION>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
		</PARAMETER>
		<PARAMETER uuid="e3f3feae329211e496ad0024e8a0e567" xsi:type="signalDescription">
			<NAME xsi:type="string">v_LatEgo</NAME>
			<DESCRIPTION xsi:type="string">The calculated maximum signal.</DESCRIPTION>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
			<DIRECTION xsi:type="string">OUT</DIRECTION>
		</PARAMETER>
		<PARAMETER uuid="0b01953ac27711e9999f00e18c8fe4bc" xsi:type="signalDescription">
			<NAME xsi:type="string">calcAngle</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
		</PARAMETER>
		<PARAMETER uuid="8790b4c8c27811e98e9a00e18c8fe4bc" xsi:type="signalDescription">
			<NAME xsi:type="string">v_LongEgo</NAME>
			<EVENT-TYPE xsi:type="string">PHY</EVENT-TYPE>
		</PARAMETER>
	</SIGNALS>
	<PARAMETERS xsi:type="trcpParameterDescriptionList">
		<PARAMETER uuid="620c08404fc811e99c7800e18c8fe4bc" xsi:type="parameterDescription">
			<NAME xsi:type="string">csvFlag</NAME>
			<PARAMETER-TYPE xsi:type="string">BOOLEAN</PARAMETER-TYPE>
		</PARAMETER>
	</PARAMETERS>
	<INIT-FUNCTION xsi:type="pyFunctionII">
		<NAME xsi:type="string">Init</NAME>
		<PARAMETER-NAMES/>
		<CODE xsi:type="pyCode">
			<SOURCE xsi:type="string">#Head of function is generated, do not edit!
def Init(dataContainer, parameters, report):
    from collections import deque
    
    # set default values
    dataContainer.emptySignal = True
    dataContainer.max = None
    dataContainer.time = deque()
</SOURCE>
		</CODE>
	</INIT-FUNCTION>
	<FINALIZE-FUNCTION xsi:type="pyFunctionII">
		<NAME xsi:type="string">Finalize</NAME>
		<PARAMETER-NAMES/>
		<CODE xsi:type="pyCode">
			<SOURCE xsi:type="string">#Head of function is generated, do not edit!
def Finalize(dataContainer, parameters, report):
    if len(dataContainer.time) &gt;= 0:
        for time in dataContainer.time:
            dataContainer.EmitSignal(time, &quot;Maximum&quot;, dataContainer.max)
    if parameters[&quot;csvFlag&quot;] == True:
        import os
        from application.api.Api import Api
        api = Api()
        WRKPath = api.GetSetting(&quot;workspacePath&quot;)
        filePath = os.path.join(WRKPath,'Files/results.txt')
        file = open(filePath,&quot;a&quot;)
        # emit signals if time stamps detected
        if len(dataContainer.time) &lt;= 0:
            file.write(&quot;,9999&quot;)
            file.close()
            report.SetResultText(&quot;Input signal is empty.&quot;)
            return
        else:
            file.write(&quot;,&quot;)
            file.write(&quot;%s&quot; %dataContainer.max)
            file.close()
</SOURCE>
		</CODE>
	</FINALIZE-FUNCTION>
	<FUNCTIONS>
		<ELEMENT xsi:type="pyEventFunctionII">
			<NAME xsi:type="string">Next</NAME>
			<PARAMETER-NAMES/>
			<CODE xsi:type="pyCode">
				<SOURCE xsi:type="string">#Head of function is generated, do not edit!
def Next(event, hold, dataContainer, parameters, report):
    # get value and time from signal
    velAngle = event.GetValue(&quot;VelocityAngle&quot;)
    calcAngle = event.GetValue(&quot;calcAngle&quot;)
    LongEgo = event.GetValue(&quot;v_LongEgo&quot;)
    time  = event.GetTime()
    
    if calcAngle is None:
        calcAngle = 0
    
    # calculate lateral velocity
    if velAngle != calcAngle:
        diffAngle = velAngle-calcAngle
        LatEgo = math.tan(diffAngle) * LongEgo
    else:
        LatEgo = 0
    
    # save time stamps
    dataContainer.time.append(time)
    dataContainer.EmitSignal(time, &quot;v_LatEgo&quot;, LatEgo)
</SOURCE>
			</CODE>
			<SIGNAL-NAMES>
				<ELEMENT xsi:type="string">VelocityAngle</ELEMENT>
			</SIGNAL-NAMES>
		</ELEMENT>
	</FUNCTIONS>
</TRACE-STEP-PROTOTYPE>
